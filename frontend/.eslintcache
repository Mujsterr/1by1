[{"/Users/owen/Desktop/bullshit/tailwind-typescript-react/src/index.js":"1","/Users/owen/Desktop/bullshit/tailwind-typescript-react/src/App.js":"2","/Users/owen/Desktop/yuHacks/1by1/frontend/src/index.js":"3","/Users/owen/Desktop/yuHacks/1by1/frontend/src/App.js":"4","/Users/owen/Desktop/yuHacks/1by1/frontend/src/components/form.js":"5","/Users/owen/Desktop/yuHacks/1by1/frontend/src/components/image_frame.js":"6"},{"size":259,"mtime":1608011020428,"results":"7","hashOfConfig":"8"},{"size":443,"mtime":1608011735820,"results":"9","hashOfConfig":"8"},{"size":259,"mtime":1613240822860,"results":"10","hashOfConfig":"11"},{"size":1287,"mtime":1613267931899,"results":"12","hashOfConfig":"11"},{"size":1156,"mtime":1613267910770,"results":"13","hashOfConfig":"11"},{"size":1153,"mtime":1613267431373,"results":"14","hashOfConfig":"11"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"143h27c",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"frmm07",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"/Users/owen/Desktop/bullshit/tailwind-typescript-react/src/index.js",[],["31","32"],"/Users/owen/Desktop/bullshit/tailwind-typescript-react/src/App.js",[],"/Users/owen/Desktop/yuHacks/1by1/frontend/src/index.js",[],"/Users/owen/Desktop/yuHacks/1by1/frontend/src/App.js",[],"/Users/owen/Desktop/yuHacks/1by1/frontend/src/components/form.js",["33"],"import React, { useState, useEffect } from 'react';\nimport ImageFrame from './image_frame';\n\nconst Form = () => {\n\tconst [bio, setBio] = useState('');\n\tconst [images, setImages] = useState({ icons: [{ icon_id: -1 }] });\n\n\tconst mySubmitHandler = (event) => {\n\t\t// * Prevent reload\n\t\tevent.preventDefault();\n\t\tvar data = new URLSearchParams();\n\t\tdata.append('bio', bio);\n\n\t\tconst url = 'http://localhost:4000/';\n\t\tfetch(url, {\n\t\t\tmethod: 'POST',\n\t\t\tbody: data,\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded',\n\t\t\t},\n\t\t})\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => setImages(data));\n\t};\n\n\tconst myChangeHandler = (event) => {\n\t\tsetBio(event.target.value);\n\t};\n\n\treturn (\n\t\t<form className=\"text-center\" onSubmit={mySubmitHandler}>\n\t\t\t<p>Enter your bio:</p>\n\t\t\t<textarea\n\t\t\t\tclassName=\"w-24 md:w-auto\"\n\t\t\t\ttype=\"text\"\n\t\t\t\tonChange={myChangeHandler}\n\t\t\t/>\n\t\t\t<input type=\"submit\" />\n\t\t\t<ImageFrame data={images} />\n\t\t</form>\n\t);\n};\nexport default Form;\n",["34","35"],"/Users/owen/Desktop/yuHacks/1by1/frontend/src/components/image_frame.js",["36","37"],"import React, { useState, useEffect } from 'react';\nimport { fabric } from 'fabric';\n\nconst ImageFrame = ({ data }) => {\n\tconst [canvases, setCanvases] = useState([]);\n\n\tuseEffect(() => {\n\t\t// * If the data has not been fetched yet do not render a canvas (-1 icon_id refers to missing id)\n\t\tif (data.icons[0].icon_id !== -1) {\n\t\t\tdata.icons.map((icon) =>\n\t\t\t\tsetCanvases([...canvases, initCanvas(icon, icon.icon_id)])\n\t\t\t);\n\t\t}\n\t}, [data]);\n\n\tconst initCanvas = (icon, id) => {\n\t\t// * hardcodes the location of the image, for the final version you can use ( .download_url for the full version unscaled)\n\t\tlet imgLink = icon.raster_sizes[7].formats[0].preview_url;\n\t\tlet canvas = new fabric.Canvas(id.toString(), {\n\t\t\theight: 300,\n\t\t\twidth: 300,\n\t\t\tbackgroundColor: 'white',\n\t\t});\n\n\t\tfabric.Image.fromURL(imgLink, function (oImg) {\n\t\t\tcanvas.add(oImg);\n\t\t});\n\n\t\treturn canvas;\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h1></h1>\n\t\t\t<div>\n\t\t\t\t<div className=\"inline-grid gap-1 grid-cols-3 content-center\">\n\t\t\t\t\t{data.icons.map((icon) => {\n\t\t\t\t\t\treturn <canvas id={icon.icon_id} className=\"p-2\" />;\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\nexport default ImageFrame;\n",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":1,"column":27,"nodeType":"44","messageId":"45","endLine":1,"endColumn":36},{"ruleId":"38","replacedBy":"46"},{"ruleId":"40","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":14,"column":5,"nodeType":"50","endLine":14,"endColumn":11,"suggestions":"51"},{"ruleId":"52","severity":1,"message":"53","line":34,"column":4,"nodeType":"54","endLine":34,"endColumn":8},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar",["55"],["56"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'canvases'. Either include it or remove the dependency array. You can also do a functional update 'setCanvases(c => ...)' if you only need 'canvases' in the 'setCanvases' call.","ArrayExpression",["57"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},"Update the dependencies array to be: [canvases, data]",{"range":"60","text":"61"},[432,438],"[canvases, data]"]